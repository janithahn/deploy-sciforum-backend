version: "3.2"

services:

  # nginx-certbot:
    # restart: unless-stopped
    # image: staticfloat/nginx-certbot
    # ports:
        # - 80:80/tcp
        # - 443:443/tcp
    # environment:
        # CERTBOT_EMAIL: admin@sciforum.tech
    # volumes:
      # - ./conf.d:/etc/nginx/user.conf.d:ro
      # - letsencrypt:/etc/letsencrypt

  nginx:
    image: nginx:latest
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email rng.janitha@gmail.com --agree-tos --no-eff-email -d sciforumbackend.centralindia.cloudapp.azure.com
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  mongodb:
    restart: always
    image: mongo:4.2.8
    ports:
        - "27017:27017"
    volumes:
      - ./mongo_dump/mongo_init.sh:/docker-entrypoint-initdb.d/mongo_init.sh
      - ./mongo_dump:/mongo_dump
      - ./devmongo:/data/db
    networks:
      - db-net
    
  mysqldb:
    restart: always
    image: mysql:8.0.22
    container_name: mysqldb
    command: --default-authentication-plugin=mysql_native_password
    env_file:
      - ./sciforum-backend/settings.ini
    ports:
      - "3302:3306"
    environment: 
      MYSQL_USER: janithahn
      MYSQL_PASSWORD: Hello.php1227
      MYSQL_DATABASE: sciforum
    security_opt:
      - seccomp:unconfined
    volumes:
      - ./mysql_dump:/docker-entrypoint-initdb.d
      - ./devmysqldb:/var/lib/mysql
    networks:
      - db-net

  redis:
    image: redis:latest
    container_name: redis
    ports:
    - "6379:6379"
    # restart: always
    volumes:
            - ./config/redis.conf:/redis.conf
    command: [ "redis-server", "/redis.conf" ]
    networks:
      - db-net

  sciforum-backend: &sciforum-backend
    restart: always
    # container_name: back
    # command : bash -c "python check_db.py --service-name mysqldb --ip mysqldb --port 3306 && python manage.py runserver 0.0.0.0:8000"
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./sciforum-backend/settings.ini
    build:
      context: ./sciforum-backend/
      dockerfile: Dockerfile
    ports:
       - "8000:8000"
    depends_on:
      - mysqldb
      - mongodb
      - redis
    links:
      - redis
    networks:
      - db-net

  celery-worker:
    <<: *sciforum-backend
    image: sciforum-celeryworker
    depends_on:
      - redis
    ports: []
    command: celery -A sciforum worker -l INFO
    links:
      - redis
    networks:
      - db-net

  celery-beat:
    <<: *sciforum-backend
    image: sciforum-celerybeat
    depends_on:
      - redis
    ports: []
    command: celery -A sciforum beat -l INFO
    links:
      - redis
    networks:
      - db-net

networks:
  db-net:
    driver: bridge

# volumes:  
  # letsencrypt: